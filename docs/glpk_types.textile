h1. glpk_types module

h2. Derived Types

h3. glp_smcp

Simplex settings/options.


* msg_lev - **integer(c_int)**
* meth - **integer(c_int)**
* pricing - **integer(c_int)**
* r_test - **integer(c_int)**
* tol_bnd - **real(c_double)**
* tol_dj - **real(c_double)**
* tol_piv - **real(c_double)**
* obj_ll - **real(c_double)**
* obj_ul - **real(c_double)**
* it_lim - **integer(c_int)**
* tm_lim - **integer(c_int)**
* out_frq - **integer(c_int)**
* out_dly - **integer(c_int)**
* presolve - **integer(c_int)**
* foo_bar - **real(c_double)**

h3. glp_bfcp

Basis factorization control parameters


* msg_lev - **integer(c_int)**
* itype - **integer(c_int)**
* lu_size - **integer(c_int)**
* piv_tol - **real(c_double)**
* piv_lim - **integer(c_int)**
* suhl - **integer(c_int)**
* eps_tol - **real(c_double)**
* max_gro - **real(c_double)**
* nfs_max - **integer(c_int)**
* upd_tol - **real(c_double)**
* nrs_max - **integer(c_int)**
* rs_size - **integer(c_int)**
* foo_bar - **real(c_double), dimension(0:37)**

h3. glp_iptcp

Interior-point settings/options.


* msg_lev - **integer(c_int)**
* ord_alg - **integer(c_int)**
* foo_bar - **real(c_double)**

h3. glp_iocp

Integer optimizer control parameters


* msg_lev - **integer(c_int)** - message level (see glp_smcp)
* br_tech - **integer(c_int)** - branching technique:
* bt_tech - **integer(c_int)** - backtracking technique:
* tol_int - **real(c_double)** - mip.tol_int
* tol_obj - **real(c_double)** - mip.tol_obj
* tm_lim - **integer(c_int)** - mip.tm_lim (milliseconds)
* out_frq - **integer(c_int)** - mip.out_frq (milliseconds)
* out_dly - **integer(c_int)** - mip.out_dly (milliseconds)
* cb_func - **type(C_FUNPTR)**
* cb_info - **type(c_ptr)** - mip.cb_info
* cb_size - **integer(c_int)** - mip.cb_size
* pp_tech - **integer(c_int)** - preprocessing technique
* mip_gap - **real(c_double)** - relative MIP gap tolerance
* mir_cuts - **integer(c_int)** - MIR cuts       (GLP_ON/GLP_OFF)
* gmi_cuts - **integer(c_int)** - Gomory's cuts  (GLP_ON/GLP_OFF)
* cov_cuts - **integer(c_int)** - cover cuts     (GLP_ON/GLP_OFF)
* clq_cuts - **integer(c_int)** - clique cuts    (GLP_ON/GLP_OFF)
* presolve - **integer(c_int)** - enable/disable using MIP presolver
* binarize - **integer(c_int)** - try to binarize integer variables
* fp_heur - **integer(c_int)** - feasibility pump heuristic
* ps_heur - **integer(c_int)** - proximity search heuristic
* ps_tm_lim - **integer(c_int)** - proxy time limit, milliseconds
* use_sol - **integer(c_int)** - use existing solution
* save_sol_ptr - **type(c_ptr)** - filename to save every new solution
* alien - **integer(c_int)** - use alien solver
* foo_bar - **real(c_double), dimension(0:24)**

h3. glp_attr

* level - **integer(c_int)** - subproblem level at which the row was added
* origin - **integer(c_int)** - row origin flag:
* klass - **integer(c_int)** - row class descriptor:
* foo_bar - **real(c_double), dimension(0:6)**

h3. glp_mpscp

MPS format control parameters


* blank - **integer(c_int)** - character code to replace blanks in symbolic names
* obj_name_ptr - **type(c_ptr)** - objective row name
* tol_mps - **real(c_double)** - zero tolerance for MPS data
* foo_bar - **real(c_double), dimension(0,16)**

h3. glp_cpxcp

CPLEX LP format control parameters


* foo_bar - **real(c_double), dimension(0,19)**


<div style="clear:all; width:100%; border-top:1px solid black;">
p{color:red;font-size:small;}. Automatically generated by "embroider":https://github.com/ArmstrongJ/embroider
</div>
